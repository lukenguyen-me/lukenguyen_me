---
import { Badge } from "@/components/ui/badge";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { cn } from "@/lib/utils";
import IconRenderer from "@/components/blocks/IconRenderer";

interface Props {
  title: string;
  href?: string;
  description: string;
  dates: string;
  tags: readonly string[];
  link?: string;
  image?: string;
  video?: string;
  links?: readonly {
    icon: React.ReactNode;
    type: string;
    href: string;
  }[];
  className?: string;
}

const {
  title,
  href,
  description,
  dates,
  tags,
  link,
  image,
  video,
  links,
  className,
} = Astro.props;
---

<Card
  className={"flex h-full flex-col overflow-hidden border transition-all duration-300 ease-out hover:shadow-lg"}
>
  <a
    href={href || "#"}
    target="_blank"
    class={cn("block cursor-pointer", className)}
  >
    {
      video && (
        <video
          src={video}
          autoplay
          loop
          muted
          class="pointer-events-none mx-auto h-40 w-full object-cover object-top"
        />
      )
    }
    {
      image && (
        <img
          src={image}
          alt={title}
          width={500}
          height={300}
          class="h-40 w-full overflow-hidden object-cover object-top"
        />
      )
    }
  </a>
  <CardHeader className="px-2 py-0">
    <div class="space-y-1">
      <CardTitle className="mt-1 text-base">{title}</CardTitle>
      <time class="font-sans text-xs">{dates}</time>
      <div class="hidden font-sans text-xs underline print:visible">
        {link?.replace("https://", "").replace("www.", "").replace("/", "")}
      </div>
      <div
        class="prose dark:prose-invert max-w-full text-pretty font-sans text-xs text-muted-foreground"
      >
        {description}
      </div>
    </div>
  </CardHeader>
  <CardContent className="mt-auto flex flex-col px-2 py-0">
    {
      tags && tags.length > 0 && (
        <div class="mt-2 flex flex-wrap gap-1">
          {tags?.map((tag) => (
            <Badge className="px-1 text-[10px] rounded-md" variant="secondary">
              {tag}
            </Badge>
          ))}
        </div>
      )
    }
  </CardContent>
  <CardFooter className="p-2">
    {
      links && links.length > 0 && (
        <div class="flex flex-row flex-wrap items-start gap-1">
          {links?.map((link) => (
            <a href={link?.href} target="_blank">
              <Badge className="flex gap-2 px-2 py-1 text-[10px] rounded-md">
                <IconRenderer icon={link.icon} />
                {link.type}
              </Badge>
            </a>
          ))}
        </div>
      )
    }
  </CardFooter>
</Card>
