---
import PageBreadcrumb from "@/components/blocks/PageBreadcrumb.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { Separator } from "@/components/ui/separator";
import BlogLayout from "@/layouts/BlogLayout.astro";
import { cn, getBlogImageFromPath } from "@/lib/utils";
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import { last } from "lodash-es";

export async function getStaticPaths() {
  const publishOnly = import.meta.env.PROD ? true : false;
  const posts = (await getCollection("blog")).filter(
    (e) => (publishOnly && e.data.published) || !publishOnly,
  );
  return posts.map((post) => ({
    params: {
      slug: post.slug.includes("/") ? last(post.slug.split("/")) : post.slug,
    },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { title, description, heroImage, pubDate, updatedDate } = post.data;
const { Content } = await post.render();

const image = await getBlogImageFromPath(heroImage);
---

<!doctype html>
<BlogLayout title={title} description={description} image={heroImage}>
  <main
    class={cn(
      "min-h-screen antialiased max-w-2xl mx-auto py-12 sm:py-24 px-6",
      "flex flex-col min-h-[100dvh] space-y-10",
    )}
  >
    <PageBreadcrumb items={[{ title: "Blog", url: "/blog" }, { title }]} />
    <article class="flex flex-col gap-6">
      <div>
        {
          image && (
            <Image
              width={1020}
              height={510}
              src={image.default}
              class="w-full rounded-lg"
              alt=""
            />
          )
        }
      </div>
      <div>
        <div>
          <FormattedDate date={pubDate} />
        </div>
        <h1 class="text-4xl font-medium leading-tight">{title}</h1>
      </div>
      <Separator className="mx-auto my-6 w-[50%]" />
      <div class="markdown-body">
        <Content />
      </div>
      <Separator className="mx-auto mt-6 w-[50%]" />
      {
        updatedDate && (
          <div class="text-center text-sm text-muted-foreground">
            Last updated on <FormattedDate date={updatedDate} />
          </div>
        )
      }
      <p class="text-center text-sm font-medium">Thanks for reading</p>
    </article>
  </main>
</BlogLayout>
